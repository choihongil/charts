apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "rails.fullname" . }}
  labels:
    app.kubernetes.io/name: {{ include "rails.name" . }}
    helm.sh/chart: {{ include "rails.chart" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "rails.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "rails.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
    spec:
      volumes:
        - name: source-volume
          hostPath:
            path: {{ required "A valid sourceDir is required" .Values.sourceDir }}
            type: Directory
        - name: gem-volume
          hostPath:
            path: {{ .Values.sourceDir }}/vendor/bundle
            type: Directory
        - name: ssh-volume
          hostPath:
            path: {{ required "A valid sshDir is required" .Values.sshDir }}
            type: Directory
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command: ["rails"]
          args: ["server", "-b", "0.0.0.0"]
          stdin: true
          tty: true
          ports:
            - name: http
              containerPort: 3000
              protocol: TCP
          {{- include "rails.volumeMounts" . | nindent 10 }}
          {{- if .Values.env }}
          env:
            {{- tpl .Values.env . | nindent 12 -}}
          {{- end }}
          lifecycle:
            postStart:
              exec:
                command: ["rm", "-f", "tmp/pids/server.pid"]
          {{- if ne .Values.applyEnv "development" -}}
          livenessProbe:
            httpGet:
              path: /
              port: http
          readinessProbe:
            httpGet:
              path: /
              port: http
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          {{- end }}
        {{- if .Values.webpackDevServer.enabled }}
        - name: webpack-dev-server
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          command: ["bin/webpack-dev-server"]
          ports:
            - name: webpack
              containerPort: {{ .Values.webpackDevServer.port }}
          {{- include "rails.volumeMounts" . | nindent 10 }}
          {{- if .Values.env }}
          env:
            {{- tpl .Values.env . | nindent 12 -}}
          {{- end }}
        {{- end }}
      initContainers:
        - name: init
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          command: ["sh", "-c", {{ include "rails.initCommand" . | quote -}}]
          {{- include "rails.volumeMounts" . | nindent 10 }}
          {{- if .Values.env }}
          env:
            {{- tpl .Values.env . | nindent 12 }}
          {{- end -}}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
